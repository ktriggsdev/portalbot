/// <reference types="node" />
import { Provider, ITrack, IPlaylist } from "../Provider";
import fs = require("node:fs");
import { LoadResultType } from "../../utils/consts";
declare class LocalProvider extends Provider {
    constructor();
    get cacheIsAllowed(): boolean;
    /** Loads and returns a specified audio file */
    loadTracks(query: string, loadType: LoadResultType): Promise<any[]>;
    /** Loads a directory and returns tracks with audio codecs */
    loadPlaylist(query: string): Promise<IPlaylist>;
    loadFile(queryPath: string): Promise<{
        name: string;
        description: string;
        provider: string;
        encodedId: string;
        authorName: string;
        authorURL: string;
        sourceURL: string;
    }>;
    getTrackStream(track: ITrack): Promise<fs.ReadStream>;
    checkIsValid(extname: string): boolean;
    buildTrack(source: string): ITrack;
}
export = LocalProvider;
